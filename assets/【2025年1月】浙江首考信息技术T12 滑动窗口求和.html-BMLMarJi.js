import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as t,o as n}from"./app-DhODi6EO.js";const h="/assets/01-BZUkWS2Q.png",k="/assets/02-E0xCMQN-.png",e="/assets/03-ZR_pvqrp.png",p={};function l(r,s){return n(),a("div",null,s[0]||(s[0]=[t('<h1 id="t12-滑动窗口求和" tabindex="-1"><a class="header-anchor" href="#t12-滑动窗口求和"><span>T12：滑动窗口求和</span></a></h1><figure><img src="'+h+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><hr><h2 id="完整程序" tabindex="-1"><a class="header-anchor" href="#完整程序"><span>完整程序</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> random</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [random.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">randint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">80</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">qa</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">qb</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">h,t</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">temp </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> k </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    qa[t]</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">c[k]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    qb[t]</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">temp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">qa[t]</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">qa[h]</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(qb[h],qb[t])</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    temp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">qb[t]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    t</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(t</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">%</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    h</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(h</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">%</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="模拟法" tabindex="-1"><a class="header-anchor" href="#模拟法"><span>模拟法</span></a></h2><p>在考场中很多人可能会被中间的80个随机数吓到，但显然这题不是让你去把80个数全写出来模拟一遍</p><p>qa,qb每5次循环就会被完全更新一遍，那么从第91次循环开始的<code>h</code>,<code>t</code>的位置和第1次完全相同</p><p>而且80个数是被略去的，说明中间的数必定和答案无关</p><p>因此，我们可以把前面的结果全部当作0，从最后10个数字开始写：</p><blockquote><p>为方便阅读，qa[h] qb[h]用粗体标注，qa[t] qb[t]用斜体标注</p><p>注意：考场上没时间列表，可以把两个数组写出来并通过划掉原先数字的方法更新数组</p></blockquote><table><thead><tr><th>qa</th><th>qb</th></tr></thead><tbody><tr><td><em>0</em>,0,0,0,<strong>2</strong></td><td><em>0</em>,0,0,0,<strong>2</strong></td></tr><tr><td><strong>3</strong>,<em>0</em>,0,0,2</td><td><strong>5</strong>,<em>0</em>,0,0,2</td></tr><tr><td>3,<strong>2</strong>,<em>0</em>,0,2</td><td>5,<strong>7</strong>,<em>0</em>,0,2</td></tr><tr><td>3,2,<strong>2</strong>,<em>0</em>,2</td><td>5,7,<strong>9</strong>,<em>0</em>,2</td></tr><tr><td>3,2,2,<strong>2</strong>,<em>2</em></td><td>5,7,9,<strong>9</strong>,<em>2</em></td></tr><tr><td><em>3</em>,2,2,2,<strong>2</strong></td><td><em>5</em>,7,9,9,<strong>8</strong></td></tr><tr><td><strong>1</strong>,<em>2</em>,2,2,2</td><td><strong>7</strong>,<em>7</em>,9,9,8</td></tr><tr><td>1,<strong>1</strong>,<em>2</em>,2,2</td><td>7,<strong>6</strong>,<em>9</em>,9,8</td></tr><tr><td>1,1,<strong>1</strong>,<em>2</em>,2</td><td>7,6,<strong>5</strong>,<em>9</em>,8</td></tr><tr><td>1,1,1,<strong>1</strong>,<em>2</em></td><td>7,6,5,<strong>4</strong>,<em>8</em></td></tr></tbody></table><p>由此可见，<code>qb[h]</code>为8，<code>qb[t]</code>为4</p><p>故选择B项。</p><h2 id="原理-滑动窗口的求和" tabindex="-1"><a class="header-anchor" href="#原理-滑动窗口的求和"><span>原理：滑动窗口的求和</span></a></h2><p>前面的方法简单粗暴，但在紧张的高考考场上这样做浪费时间且搞人心态（本人就是模拟出不存在选项导致心态炸裂的）</p><p>现在我们从程序出发看看它的原理</p><hr><p>从<code>t=(t+1)%5</code>和<code>h=(h+1)%5</code>可以看出，<code>qa</code>和<code>qb</code>是循环队列，而h和t是队列的头和尾，队列长度始终为4</p><p>现在来看对qa和qb操作的部分，这三句是题目的精髓所在：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">qa[t]</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">c[k] </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#进入循环的第一件事，将c[k]中读到的内容入qa队</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">qb[t]</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">temp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">qa[t]</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">qa[h] </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">temp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">qb[t] </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#将计算的结果存入临时变量temp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重点来看<code>qb[t]=temp+qa[t]-qa[h]</code>。<code>temp</code>是上次操作的结果，它被加上了<code>qa[t]</code>并减去了<code>qa[h]</code>，而<code>qa[t]</code>与<code>c[k]</code>相等</p><p>那么这行代码相当于:<code>本次结果=上次结果+c[k]-qa[h]</code>，如果忽略掉减去的<code>qa[h]</code>，是不是有点<strong>累加</strong>的感觉了？在循环中，<code>c[k]</code>被加上并进入循环队列</p><p>当循环队列被填满时，最先进入的数字(<code>qa[h]</code>)就被减去并出队</p><p><strong>这就相当于在c上长度为4的一个滑动窗口。每做一次循环，窗口向前移一个单位，并将窗口中数字和存储于qb中。代码通过在每次迭代中加上新元素、减去旧元素，实现窗口和的更新</strong></p><p><img src="`+k+'" alt="" loading="lazy"><br><img src="'+e+'" alt="" loading="lazy"></p><p>倒数第五次的窗口和(8)和最后一次的窗口和(4)就是最终答案</p><p>这也印证了可无视随机数的原因：<strong>中间的随机数在当前窗口之外，其影响在计算过程中被抵消，不会影响最后一行的输出结果</strong></p>',29)]))}const A=i(p,[["render",l]]),g=JSON.parse('{"path":"/posts/%E3%80%902025%E5%B9%B41%E6%9C%88%E3%80%91%E6%B5%99%E6%B1%9F%E9%A6%96%E8%80%83%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AFT12%20%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%B1%82%E5%92%8C.html","title":"【2025年1月】浙江首考信息技术T12:滑动窗口求和","lang":"zh-CN","frontmatter":{"date":"2025-01-28T00:00:00.000Z","title":"【2025年1月】浙江首考信息技术T12:滑动窗口求和","excerpt":"作为参加本次首考的考牲，个人感觉信息技术部分难度较24年1月/24年6月更大","category":["Python"],"description":"T12：滑动窗口求和 完整程序 模拟法 在考场中很多人可能会被中间的80个随机数吓到，但显然这题不是让你去把80个数全写出来模拟一遍 qa,qb每5次循环就会被完全更新一遍，那么从第91次循环开始的h,t的位置和第1次完全相同 而且80个数是被略去的，说明中间的数必定和答案无关 因此，我们可以把前面的结果全部当作0，从最后10个数字开始写： 为方便阅读...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"【2025年1月】浙江首考信息技术T12:滑动窗口求和\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-01-28T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-19T12:24:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Betta_Fish\\",\\"url\\":\\"https://github.com/zxbmmmmmmmmm\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/%E3%80%902025%E5%B9%B41%E6%9C%88%E3%80%91%E6%B5%99%E6%B1%9F%E9%A6%96%E8%80%83%E4%BF%A1%E6%81%AF%E6%8A%80%E6%9C%AFT12%20%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%B1%82%E5%92%8C.html"}],["meta",{"property":"og:site_name","content":"Betta_Fish"}],["meta",{"property":"og:title","content":"【2025年1月】浙江首考信息技术T12:滑动窗口求和"}],["meta",{"property":"og:description","content":"T12：滑动窗口求和 完整程序 模拟法 在考场中很多人可能会被中间的80个随机数吓到，但显然这题不是让你去把80个数全写出来模拟一遍 qa,qb每5次循环就会被完全更新一遍，那么从第91次循环开始的h,t的位置和第1次完全相同 而且80个数是被略去的，说明中间的数必定和答案无关 因此，我们可以把前面的结果全部当作0，从最后10个数字开始写： 为方便阅读..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-19T12:24:23.000Z"}],["meta",{"property":"article:published_time","content":"2025-01-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-19T12:24:23.000Z"}]]},"git":{"createdTime":1750335863000,"updatedTime":1750335863000,"contributors":[{"name":"Betta_Fish","username":"","email":"zxbmmmmmmmmm@qq.com","commits":1}]},"readingTime":{"minutes":3.33,"words":999},"filePathRelative":"posts/【2025年1月】浙江首考信息技术T12 滑动窗口求和.md","autoDesc":true}');export{A as comp,g as data};
