import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as n,o as e}from"./app-DzPtObQl.js";const l="/assets/01-C2ZmmybD.png",t="/assets/02-B-akQKGd.png",h="/assets/03-Dr_S26Kd.png",p={};function r(k,s){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="c-源生成器-source-generator-入门" tabindex="-1"><a class="header-anchor" href="#c-源生成器-source-generator-入门"><span>C# 源生成器(Source Generator)入门</span></a></h1><p>C#9 引入了一个强大的机制：源生成器(Source Generator)。通过创建源生成器，我们可以简化大量重复编写的代码，或是减少反射来获得更强的性能以及AOT支持</p><p>本文将介绍如何从零开始创建一个最简单的源生成器</p><h2 id="创建生成器项目" tabindex="-1"><a class="header-anchor" href="#创建生成器项目"><span>创建生成器项目</span></a></h2><p>创建一个SourceGeneratorDemo.Generator项目，<a href="http://xn--siq143d6gaui038devl19q8geb25a.NET" target="_blank" rel="noopener noreferrer">目标框架需要设置为.NET</a> Standard 2.0</p><blockquote><p>这大概由于Visual <a href="http://xn--Studio-ur3j386diywk66b2b0c.NET" target="_blank" rel="noopener noreferrer">Studio尚未迁移到.NET</a> Core，<a href="http://xn--Framework-e49rz5qo8fv78r.NET" target="_blank" rel="noopener noreferrer">Framework最高支持.NET</a> Standard 2.0的项目</p></blockquote><p>添加<code>Microsoft.CodeAnalysis.Analyzers</code>、<code>Microsoft.CodeAnalysis.CSharp</code>的nuget引用。</p><p>添加<code>EnForceExtendedAnalyzerRules</code>属性，强制禁用一些分析器不适用的API，否则IDE会有警告</p><p>（此属性的具体作用可以看lindexi大佬的<a href="https://blog.lindexi.com/post/Roslyn-%E5%88%86%E6%9E%90%E5%99%A8-EnforceExtendedAnalyzerRules-%E5%B1%9E%E6%80%A7%E7%9A%84%E4%BD%9C%E7%94%A8.html" target="_blank" rel="noopener noreferrer">这篇文章</a>）</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PropertyGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">EnForceExtendedAnalyzerRules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;true&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">EnForceExtendedAnalyzerRules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PropertyGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最终csproj文件如下：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Project</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Sdk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Microsoft.NET.Sdk&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PropertyGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">TargetFramework</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;netstandard2.0&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">TargetFramework</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LangVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;preview&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LangVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Nullable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;enable&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Nullable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">EnForceExtendedAnalyzerRules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;true&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">EnForceExtendedAnalyzerRules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PropertyGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PackageReference</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Microsoft.CodeAnalysis.Analyzers&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;4.14.0&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PrivateAssets</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;all&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PrivateAssets</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">IncludeAssets</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;runtime; build; native; contentfiles; analyzers; buildtransitive&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">IncludeAssets</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PackageReference</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PackageReference</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Microsoft.CodeAnalysis.CSharp&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;4.14.0&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ItemGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="编写源生成器" tabindex="-1"><a class="header-anchor" href="#编写源生成器"><span>编写源生成器</span></a></h2><p>创建<code>SampleGenerator.cs</code>，添加<code>[Generator]</code>特性并实现<code>IIncrementalGenerator</code>接口</p><blockquote><p>旧的源生成器<code>ISourceGenerator</code>在每次代码有更改时都会扫描整个语法树，开销很大。而新的增量生成器<code>IIncrementalGenerator</code>通过管道等方式遴选需要扫描的代码，大大减少生成开销。</p><p>因此这里我们选择<code>IIncrementalGenerator</code>进行实现</p></blockquote><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-csharp"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Generator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> SampleGenerator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">IIncrementalGenerator</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Initialize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">IncrementalGeneratorInitializationContext</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> context</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //在这里编写生成器逻辑</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们希望生成的代码如下，这里就放在一个常量中：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-csharp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> const</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> HelloWorld</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    //加上此行以防止编译器进行不必要的代码分析，避免出现警告</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    //&lt;auto-generated&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    using System;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    namespace SourceGeneratorDemo.Generator;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    public class HelloWorld</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        public static void SayHello()</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            Console.WriteLine(&quot;Hello, World!&quot;);</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        }</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    }</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;&quot;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在来编写<code>Initialize</code>方法，这是源生成器的核心部分：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-csharp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Initialize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">IncrementalGeneratorInitializationContext</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> context</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //在编译时生成源代码</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //HelloWorld.g.cs就是生成代码的文件名称</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    context</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RegisterPostInitializationOutput</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">AddSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;HelloWorld.g.cs&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">SourceText</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">From</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">HelloWorld</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Encoding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">UTF8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所有代码如下：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-csharp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">using</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">using</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Microsoft</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">CodeAnalysis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">using</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Microsoft</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">CodeAnalysis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">namespace</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> SourceGeneratorDemo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Generator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Generator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> SampleGenerator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> : </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">IIncrementalGenerator</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> const</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> string</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> HelloWorld</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        //加上此行以防止编译器进行不必要的代码分析，避免出现警告</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        //&lt;auto-generated&gt;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        using System;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        namespace SourceGeneratorDemo.Generator;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        public class HelloWorld</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            public static void SayHello()</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                Console.WriteLine(&quot;Hello, World!&quot;);</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            }</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        }</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;&quot;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Initialize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">IncrementalGeneratorInitializationContext</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> context</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        //在编译时生成源代码</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">        context</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RegisterPostInitializationOutput</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =&gt; </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">            ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">AddSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;HelloWorld.g.cs&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">SourceText</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">From</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">HelloWorld</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Encoding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">UTF8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="在其他项目中引用源生成器" tabindex="-1"><a class="header-anchor" href="#在其他项目中引用源生成器"><span>在其他项目中引用源生成器</span></a></h2><p>创建一个控制台项目SourceGeneratorDemo.Console，设为我们的启动项目</p><p>添加项目引用后，我们还要在csproj文件里做出以下调整：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ProjectReference</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;..\\SourceGeneratorDemo.Generator\\SourceGeneratorDemo.Generator.csproj&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> OutputItemType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Analyzer&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ReferenceOutputAssembly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;false&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>OutputItemType</code>属性说明源生成器是作为一个分析器(Analyzer)引入项目；</p><p><code>ReferenceOutputAssembly</code>阻止源生成器的程序集复制到输出文件夹，因为其只在编译时起作用</p><p>重新生成解决方案后，以Rider为例，我们可以在项目的<code>依赖项&gt;.NET 9.0（取决于当前项目的.NET版本）&gt;SourceGeneratorDemo.Generator.SampleGenerator</code>中找到刚刚生成的<code>HelloWorld.g.cs</code>，其内容与刚刚常量中的代码完全一致</p><figure><img src="`+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>若使用Visual Studio 2022，在项目的<code>依赖项&gt;分析器&gt;SourceGeneratorDemo.Generator&gt;SourceGeneratorDemo.Generator.SampleGenerator</code>中也可以找到相同文件</p><figure><img src="'+t+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>现在我们就可以在Program.cs引用生成的内容了:</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-csharp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">using</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> SourceGeneratorDemo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Generator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">HelloWorld</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SayHello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>编译成功即可看到输出</p><figure><img src="`+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="引用" tabindex="-1"><a class="header-anchor" href="#引用"><span>引用</span></a></h2><p><a href="https://blog.lindexi.com/post/Roslyn-%E5%88%86%E6%9E%90%E5%99%A8-EnforceExtendedAnalyzerRules-%E5%B1%9E%E6%80%A7%E7%9A%84%E4%BD%9C%E7%94%A8.html" target="_blank" rel="noopener noreferrer">Roslyn 分析器 EnforceExtendedAnalyzerRules 属性的作用</a></p><p><a href="https://poker-sang.github.io/posts/%E5%88%86%E6%9E%90%E5%99%A8/%E6%BA%90%E7%94%9F%E6%88%90%E5%99%A8%EF%BC%9A%E6%A0%B9%E6%8D%AE%E9%9C%80%E8%A6%81%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E6%9C%BA%E6%A2%B0%E9%87%8D%E5%A4%8D%E4%BB%A3%E7%A0%81.html#%E5%88%9B%E5%BB%BA%E5%8F%8A%E4%BD%BF%E7%94%A8attribute" target="_blank" rel="noopener noreferrer">源生成器：根据需要自动生成机械重复代码 | 扑克博客</a></p>',39)]))}const c=i(p,[["render",r]]),g=JSON.parse('{"path":"/posts/C_%20%E6%BA%90%E7%94%9F%E6%88%90%E5%99%A8(Source%20Generator)%E5%85%A5%E9%97%A8.html","title":"C# 源生成器(Source Generator)入门","lang":"zh-CN","frontmatter":{"date":"2025-07-11T00:00:00.000Z","title":"C# 源生成器(Source Generator)入门","category":["C#"],"tag":["Roslyn","源生成器"],"description":"C# 源生成器(Source Generator)入门 C#9 引入了一个强大的机制：源生成器(Source Generator)。通过创建源生成器，我们可以简化大量重复编写的代码，或是减少反射来获得更强的性能以及AOT支持 本文将介绍如何从零开始创建一个最简单的源生成器 创建生成器项目 创建一个SourceGeneratorDemo.Generato...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"C# 源生成器(Source Generator)入门\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-07-11T00:00:00.000Z\\",\\"dateModified\\":\\"2025-07-11T17:10:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Betta_Fish\\",\\"url\\":\\"https://github.com/zxbmmmmmmmmm\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/C_%20%E6%BA%90%E7%94%9F%E6%88%90%E5%99%A8(Source%20Generator)%E5%85%A5%E9%97%A8.html"}],["meta",{"property":"og:site_name","content":"Betta_Fish"}],["meta",{"property":"og:title","content":"C# 源生成器(Source Generator)入门"}],["meta",{"property":"og:description","content":"C# 源生成器(Source Generator)入门 C#9 引入了一个强大的机制：源生成器(Source Generator)。通过创建源生成器，我们可以简化大量重复编写的代码，或是减少反射来获得更强的性能以及AOT支持 本文将介绍如何从零开始创建一个最简单的源生成器 创建生成器项目 创建一个SourceGeneratorDemo.Generato..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-11T17:10:23.000Z"}],["meta",{"property":"article:tag","content":"源生成器"}],["meta",{"property":"article:tag","content":"Roslyn"}],["meta",{"property":"article:published_time","content":"2025-07-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-11T17:10:23.000Z"}]]},"git":{"createdTime":1752251550000,"updatedTime":1752253823000,"contributors":[{"name":"Betta_Fish","username":"","email":"zxbmmmmmmmmm@qq.com","commits":7}]},"readingTime":{"minutes":3.23,"words":968},"filePathRelative":"posts/C# 源生成器(Source Generator)入门.md","excerpt":"\\n<p>C#9 引入了一个强大的机制：源生成器(Source Generator)。通过创建源生成器，我们可以简化大量重复编写的代码，或是减少反射来获得更强的性能以及AOT支持</p>\\n<p>本文将介绍如何从零开始创建一个最简单的源生成器</p>\\n<h2>创建生成器项目</h2>\\n<p>创建一个SourceGeneratorDemo.Generator项目，<a href=\\"http://xn--siq143d6gaui038devl19q8geb25a.NET\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">目标框架需要设置为.NET</a> Standard 2.0</p>","autoDesc":true}');export{c as comp,g as data};
